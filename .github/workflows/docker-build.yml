# This workflow will attempt to create the docker image and ensure that it builds correctly
on:
  push:
    branches: [ "master" ]

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      changes_found: ${{ steps.validate.outputs.found }}
    steps:
      - name: checkout code
        uses: actions/checkout@v3
        with:
          # increase in the event of changes to git submodules
          fetch-depth: 5
      - id: validate
        run: |
          echo "=============== File Changes ==============="
          git diff --name-only HEAD^ HEAD

          echo "========== Verifying File Paths =========="
          git diff --name-only HEAD^ HEAD > files.txt

          correct_file_location=0
          while IFS= read -r file
          do
            echo $file
            if [[ $file != docker/* ]]; then
              if [[ $file == .github/workflows/docker-build.yml ]]; then
                correct_file_location=1
              else
                echo "This modified file is not under the 'docker' folder."
              fi
            else
              correct_file_location=1
            fi
          done < files.txt

          if [ $correct_file_location == 1 ]; then
            echo "::set-output name=found::true"
          else
            echo "::set-output name=found::false"
          fi

  build:
    needs: check
    if: needs.check.outputs.changes_found == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - name: Install Dependencies
        run: |
          python -m pip install pip --upgrade
          python -m pip install -r docker/requirements.txt
      - name: Create Dockerfile
        run: |
          cd docker
          echo 'from jinja2 import Environment, FileSystemLoader, Template' >> test.py && \
          echo 'with open("Dockerfile.j2", "r") as jfile:' >> test.py && \
          echo '    template = Template(jfile.read())' >> test.py && \
          echo 'output = template.render({"USER": "barbacbd",	"EMAIL": "barbacbd@dukes.jmu.edu", "FULLNAME":	"Brent Barbachem"})' >> test.py && \
          echo 'with open("Dockerfile", "w+") as ic:' >> test.py && \
          echo '    ic.write(output)' >> test.py && \
          python test.py
          cd ..
      - name: Create RSA File
        run: |
          cd docker
          echo "${{ secrets.ID_RSA_DATA }}" >> id_rsa
          cd ..
      - name: Create Local Image
        run: |
          cd docker
          docker build . -t test_cluster:latest
          cd ..